<?xml version="1.0" encoding="UTF-8"?>

<resource.explorer version="1.0" name="SYS/BIOS" dir="" href="http://processors.wiki.ti.com">



	<content name="Release Notes" href="C:/ti/bios_6_35_01_29/Bios_6_35_01_29_release_notes.html">
		<type>weblink</type>
	</content>
	<content name="Getting Started Guide" href="C:/ti/bios_6_35_01_29/docs/Bios_Getting_Started_Guide.pdf">
		<type>weblink</type>
	</content>
	<content name="Users Guide" href="C:/ti/bios_6_35_01_29/docs/Bios_User_Guide.pdf">
		<type>weblink</type>
	</content>
	<content name="Legacy Applications note" href="C:/ti/bios_6_35_01_29/docs/Bios_Legacy_App_Note.pdf">
		<type>weblink</type>
	</content>
	<filter id="filter_family_MSP430">
		<devices><device>MSP430</device></devices>
	</filter>
	<contents name="MSP430" desc="MSP430" icon="plugin://icons/obj16/devices.png">
		<filter.ref ref.id="filter_family_MSP430"/>
		<contents name="CC430x5xx Family" desc="CC430x5xx Family" icon="plugin://icons/obj16/devices.png">
			<contents name="CC430F5123" desc="CC430F5123" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F5123"/>
							<attribute key="device.variant" value="CC430F5123"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F5125" desc="CC430F5125" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F5125"/>
							<attribute key="device.variant" value="CC430F5125"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F5133" desc="CC430F5133" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F5133"/>
							<attribute key="device.variant" value="CC430F5133"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F5135" desc="CC430F5135" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F5135"/>
							<attribute key="device.variant" value="CC430F5135"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F5137" desc="CC430F5137" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F5137"/>
							<attribute key="device.variant" value="CC430F5137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F5143" desc="CC430F5143" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F5143"/>
							<attribute key="device.variant" value="CC430F5143"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F5145" desc="CC430F5145" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F5145"/>
							<attribute key="device.variant" value="CC430F5145"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F5147" desc="CC430F5147" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F5147"/>
							<attribute key="device.variant" value="CC430F5147"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="CC430x6xx Family" desc="CC430x6xx Family" icon="plugin://icons/obj16/devices.png">
			<contents name="CC430F6125" desc="CC430F6125" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F6125"/>
							<attribute key="device.variant" value="CC430F6125"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F6126" desc="CC430F6126" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F6126"/>
							<attribute key="device.variant" value="CC430F6126"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F6127" desc="CC430F6127" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F6127"/>
							<attribute key="device.variant" value="CC430F6127"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F6135" desc="CC430F6135" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F6135"/>
							<attribute key="device.variant" value="CC430F6135"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F6137" desc="CC430F6137" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F6137"/>
							<attribute key="device.variant" value="CC430F6137"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F6143" desc="CC430F6143" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F6143"/>
							<attribute key="device.variant" value="CC430F6143"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F6145" desc="CC430F6145" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F6145"/>
							<attribute key="device.variant" value="CC430F6145"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="CC430F6147" desc="CC430F6147" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_CC430F6147"/>
							<attribute key="device.variant" value="CC430F6147"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="MSP430x5xx Family" desc="MSP430x5xx Family" icon="plugin://icons/obj16/devices.png">
			<contents name="MSP430BT5190" desc="MSP430BT5190" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430BT5190"/>
							<attribute key="device.variant" value="MSP430BT5190"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5131" desc="MSP430F5131" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5131"/>
							<attribute key="device.variant" value="MSP430F5131"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5132" desc="MSP430F5132" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5132"/>
							<attribute key="device.variant" value="MSP430F5132"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5151" desc="MSP430F5151" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5151"/>
							<attribute key="device.variant" value="MSP430F5151"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5152" desc="MSP430F5152" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5152"/>
							<attribute key="device.variant" value="MSP430F5152"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5171" desc="MSP430F5171" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5171"/>
							<attribute key="device.variant" value="MSP430F5171"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5172" desc="MSP430F5172" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5172"/>
							<attribute key="device.variant" value="MSP430F5172"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5212" desc="MSP430F5212" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5212"/>
							<attribute key="device.variant" value="MSP430F5212"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5213" desc="MSP430F5213" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5213"/>
							<attribute key="device.variant" value="MSP430F5213"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5214" desc="MSP430F5214" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5214"/>
							<attribute key="device.variant" value="MSP430F5214"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5217" desc="MSP430F5217" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5217"/>
							<attribute key="device.variant" value="MSP430F5217"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5218" desc="MSP430F5218" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5218"/>
							<attribute key="device.variant" value="MSP430F5218"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5219" desc="MSP430F5219" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5219"/>
							<attribute key="device.variant" value="MSP430F5219"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5222" desc="MSP430F5222" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5222"/>
							<attribute key="device.variant" value="MSP430F5222"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5223" desc="MSP430F5223" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5223"/>
							<attribute key="device.variant" value="MSP430F5223"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5224" desc="MSP430F5224" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5224"/>
							<attribute key="device.variant" value="MSP430F5224"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5227" desc="MSP430F5227" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5227"/>
							<attribute key="device.variant" value="MSP430F5227"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5228" desc="MSP430F5228" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5228"/>
							<attribute key="device.variant" value="MSP430F5228"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5229" desc="MSP430F5229" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5229"/>
							<attribute key="device.variant" value="MSP430F5229"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5304" desc="MSP430F5304" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5304"/>
							<attribute key="device.variant" value="MSP430F5304"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5308" desc="MSP430F5308" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5308"/>
							<attribute key="device.variant" value="MSP430F5308"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5309" desc="MSP430F5309" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5309"/>
							<attribute key="device.variant" value="MSP430F5309"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5310" desc="MSP430F5310" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5310"/>
							<attribute key="device.variant" value="MSP430F5310"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5324" desc="MSP430F5324" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5324"/>
							<attribute key="device.variant" value="MSP430F5324"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5325" desc="MSP430F5325" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5325"/>
							<attribute key="device.variant" value="MSP430F5325"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5326" desc="MSP430F5326" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5326"/>
							<attribute key="device.variant" value="MSP430F5326"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5327" desc="MSP430F5327" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5327"/>
							<attribute key="device.variant" value="MSP430F5327"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5328" desc="MSP430F5328" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5328"/>
							<attribute key="device.variant" value="MSP430F5328"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5329" desc="MSP430F5329" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5329"/>
							<attribute key="device.variant" value="MSP430F5329"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5333" desc="MSP430F5333" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5333"/>
							<attribute key="device.variant" value="MSP430F5333"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5335" desc="MSP430F5335" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5335"/>
							<attribute key="device.variant" value="MSP430F5335"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5336" desc="MSP430F5336" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5336"/>
							<attribute key="device.variant" value="MSP430F5336"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5338" desc="MSP430F5338" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5338"/>
							<attribute key="device.variant" value="MSP430F5338"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5340" desc="MSP430F5340" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5340"/>
							<attribute key="device.variant" value="MSP430F5340"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5341" desc="MSP430F5341" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5341"/>
							<attribute key="device.variant" value="MSP430F5341"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5342" desc="MSP430F5342" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5342"/>
							<attribute key="device.variant" value="MSP430F5342"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5358" desc="MSP430F5358" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5358"/>
							<attribute key="device.variant" value="MSP430F5358"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5359" desc="MSP430F5359" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5359"/>
							<attribute key="device.variant" value="MSP430F5359"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5418" desc="MSP430F5418" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5418"/>
							<attribute key="device.variant" value="MSP430F5418"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5418A" desc="MSP430F5418A" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5418A"/>
							<attribute key="device.variant" value="MSP430F5418A"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5419" desc="MSP430F5419" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5419"/>
							<attribute key="device.variant" value="MSP430F5419"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5419A" desc="MSP430F5419A" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5419A"/>
							<attribute key="device.variant" value="MSP430F5419A"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5435" desc="MSP430F5435" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5435"/>
							<attribute key="device.variant" value="MSP430F5435"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5435A" desc="MSP430F5435A" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5435A"/>
							<attribute key="device.variant" value="MSP430F5435A"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5436" desc="MSP430F5436" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5436"/>
							<attribute key="device.variant" value="MSP430F5436"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5436A" desc="MSP430F5436A" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5436A"/>
							<attribute key="device.variant" value="MSP430F5436A"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5437" desc="MSP430F5437" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5437"/>
							<attribute key="device.variant" value="MSP430F5437"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5437A" desc="MSP430F5437A" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5437A"/>
							<attribute key="device.variant" value="MSP430F5437A"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5438" desc="MSP430F5438" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5438"/>
							<attribute key="device.variant" value="MSP430F5438"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5438A" desc="MSP430F5438A" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5438A"/>
							<attribute key="device.variant" value="MSP430F5438A"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5500" desc="MSP430F5500" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5500"/>
							<attribute key="device.variant" value="MSP430F5500"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5501" desc="MSP430F5501" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5501"/>
							<attribute key="device.variant" value="MSP430F5501"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5502" desc="MSP430F5502" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5502"/>
							<attribute key="device.variant" value="MSP430F5502"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5503" desc="MSP430F5503" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5503"/>
							<attribute key="device.variant" value="MSP430F5503"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5504" desc="MSP430F5504" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5504"/>
							<attribute key="device.variant" value="MSP430F5504"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5505" desc="MSP430F5505" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5505"/>
							<attribute key="device.variant" value="MSP430F5505"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5506" desc="MSP430F5506" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5506"/>
							<attribute key="device.variant" value="MSP430F5506"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5507" desc="MSP430F5507" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5507"/>
							<attribute key="device.variant" value="MSP430F5507"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5508" desc="MSP430F5508" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5508"/>
							<attribute key="device.variant" value="MSP430F5508"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5509" desc="MSP430F5509" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5509"/>
							<attribute key="device.variant" value="MSP430F5509"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5510" desc="MSP430F5510" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5510"/>
							<attribute key="device.variant" value="MSP430F5510"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5513" desc="MSP430F5513" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5513"/>
							<attribute key="device.variant" value="MSP430F5513"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5514" desc="MSP430F5514" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5514"/>
							<attribute key="device.variant" value="MSP430F5514"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5515" desc="MSP430F5515" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5515"/>
							<attribute key="device.variant" value="MSP430F5515"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5517" desc="MSP430F5517" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5517"/>
							<attribute key="device.variant" value="MSP430F5517"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5519" desc="MSP430F5519" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5519"/>
							<attribute key="device.variant" value="MSP430F5519"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5521" desc="MSP430F5521" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5521"/>
							<attribute key="device.variant" value="MSP430F5521"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5522" desc="MSP430F5522" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5522"/>
							<attribute key="device.variant" value="MSP430F5522"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5524" desc="MSP430F5524" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5524"/>
							<attribute key="device.variant" value="MSP430F5524"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5525" desc="MSP430F5525" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5525"/>
							<attribute key="device.variant" value="MSP430F5525"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5526" desc="MSP430F5526" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5526"/>
							<attribute key="device.variant" value="MSP430F5526"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5527" desc="MSP430F5527" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5527"/>
							<attribute key="device.variant" value="MSP430F5527"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5528" desc="MSP430F5528" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5528"/>
							<attribute key="device.variant" value="MSP430F5528"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5529" desc="MSP430F5529" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5529"/>
							<attribute key="device.variant" value="MSP430F5529"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5630" desc="MSP430F5630" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5630"/>
							<attribute key="device.variant" value="MSP430F5630"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5631" desc="MSP430F5631" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5631"/>
							<attribute key="device.variant" value="MSP430F5631"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5632" desc="MSP430F5632" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5632"/>
							<attribute key="device.variant" value="MSP430F5632"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5633" desc="MSP430F5633" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5633"/>
							<attribute key="device.variant" value="MSP430F5633"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5634" desc="MSP430F5634" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5634"/>
							<attribute key="device.variant" value="MSP430F5634"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5635" desc="MSP430F5635" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5635"/>
							<attribute key="device.variant" value="MSP430F5635"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5636" desc="MSP430F5636" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5636"/>
							<attribute key="device.variant" value="MSP430F5636"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5637" desc="MSP430F5637" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5637"/>
							<attribute key="device.variant" value="MSP430F5637"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5638" desc="MSP430F5638" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5638"/>
							<attribute key="device.variant" value="MSP430F5638"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5658" desc="MSP430F5658" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5658"/>
							<attribute key="device.variant" value="MSP430F5658"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F5659" desc="MSP430F5659" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F5659"/>
							<attribute key="device.variant" value="MSP430F5659"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="MSP430x6xx Family" desc="MSP430x6xx Family" icon="plugin://icons/obj16/devices.png">
			<contents name="MSP430F6433" desc="MSP430F6433" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6433"/>
							<attribute key="device.variant" value="MSP430F6433"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6435" desc="MSP430F6435" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6435"/>
							<attribute key="device.variant" value="MSP430F6435"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6436" desc="MSP430F6436" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6436"/>
							<attribute key="device.variant" value="MSP430F6436"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6438" desc="MSP430F6438" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6438"/>
							<attribute key="device.variant" value="MSP430F6438"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6458" desc="MSP430F6458" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6458"/>
							<attribute key="device.variant" value="MSP430F6458"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6459" desc="MSP430F6459" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6459"/>
							<attribute key="device.variant" value="MSP430F6459"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6630" desc="MSP430F6630" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6630"/>
							<attribute key="device.variant" value="MSP430F6630"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6631" desc="MSP430F6631" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6631"/>
							<attribute key="device.variant" value="MSP430F6631"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6632" desc="MSP430F6632" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6632"/>
							<attribute key="device.variant" value="MSP430F6632"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6633" desc="MSP430F6633" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6633"/>
							<attribute key="device.variant" value="MSP430F6633"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6634" desc="MSP430F6634" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6634"/>
							<attribute key="device.variant" value="MSP430F6634"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6635" desc="MSP430F6635" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6635"/>
							<attribute key="device.variant" value="MSP430F6635"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6636" desc="MSP430F6636" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6636"/>
							<attribute key="device.variant" value="MSP430F6636"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6637" desc="MSP430F6637" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6637"/>
							<attribute key="device.variant" value="MSP430F6637"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6638" desc="MSP430F6638" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6638"/>
							<attribute key="device.variant" value="MSP430F6638"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6658" desc="MSP430F6658" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6658"/>
							<attribute key="device.variant" value="MSP430F6658"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6659" desc="MSP430F6659" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6659"/>
							<attribute key="device.variant" value="MSP430F6659"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6720" desc="MSP430F6720" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6720"/>
							<attribute key="device.variant" value="MSP430F6720"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6721" desc="MSP430F6721" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6721"/>
							<attribute key="device.variant" value="MSP430F6721"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6723" desc="MSP430F6723" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6723"/>
							<attribute key="device.variant" value="MSP430F6723"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6724" desc="MSP430F6724" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6724"/>
							<attribute key="device.variant" value="MSP430F6724"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6725" desc="MSP430F6725" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6725"/>
							<attribute key="device.variant" value="MSP430F6725"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6726" desc="MSP430F6726" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6726"/>
							<attribute key="device.variant" value="MSP430F6726"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6730" desc="MSP430F6730" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6730"/>
							<attribute key="device.variant" value="MSP430F6730"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6731" desc="MSP430F6731" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6731"/>
							<attribute key="device.variant" value="MSP430F6731"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6733" desc="MSP430F6733" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6733"/>
							<attribute key="device.variant" value="MSP430F6733"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6734" desc="MSP430F6734" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6734"/>
							<attribute key="device.variant" value="MSP430F6734"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6735" desc="MSP430F6735" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6735"/>
							<attribute key="device.variant" value="MSP430F6735"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6736" desc="MSP430F6736" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6736"/>
							<attribute key="device.variant" value="MSP430F6736"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6745" desc="MSP430F6745" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6745"/>
							<attribute key="device.variant" value="MSP430F6745"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67451" desc="MSP430F67451" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67451"/>
							<attribute key="device.variant" value="MSP430F67451"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6746" desc="MSP430F6746" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6746"/>
							<attribute key="device.variant" value="MSP430F6746"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67461" desc="MSP430F67461" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67461"/>
							<attribute key="device.variant" value="MSP430F67461"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6747" desc="MSP430F6747" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6747"/>
							<attribute key="device.variant" value="MSP430F6747"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67471" desc="MSP430F67471" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67471"/>
							<attribute key="device.variant" value="MSP430F67471"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6748" desc="MSP430F6748" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6748"/>
							<attribute key="device.variant" value="MSP430F6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67481" desc="MSP430F67481" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67481"/>
							<attribute key="device.variant" value="MSP430F67481"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6749" desc="MSP430F6749" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6749"/>
							<attribute key="device.variant" value="MSP430F6749"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67491" desc="MSP430F67491" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67491"/>
							<attribute key="device.variant" value="MSP430F67491"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6765" desc="MSP430F6765" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6765"/>
							<attribute key="device.variant" value="MSP430F6765"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67651" desc="MSP430F67651" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67651"/>
							<attribute key="device.variant" value="MSP430F67651"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6766" desc="MSP430F6766" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6766"/>
							<attribute key="device.variant" value="MSP430F6766"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67661" desc="MSP430F67661" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67661"/>
							<attribute key="device.variant" value="MSP430F67661"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6767" desc="MSP430F6767" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6767"/>
							<attribute key="device.variant" value="MSP430F6767"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67671" desc="MSP430F67671" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67671"/>
							<attribute key="device.variant" value="MSP430F67671"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6768" desc="MSP430F6768" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6768"/>
							<attribute key="device.variant" value="MSP430F6768"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67681" desc="MSP430F67681" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67681"/>
							<attribute key="device.variant" value="MSP430F67681"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6769" desc="MSP430F6769" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6769"/>
							<attribute key="device.variant" value="MSP430F6769"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67691" desc="MSP430F67691" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67691"/>
							<attribute key="device.variant" value="MSP430F67691"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6775" desc="MSP430F6775" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6775"/>
							<attribute key="device.variant" value="MSP430F6775"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67751" desc="MSP430F67751" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67751"/>
							<attribute key="device.variant" value="MSP430F67751"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6776" desc="MSP430F6776" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6776"/>
							<attribute key="device.variant" value="MSP430F6776"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67761" desc="MSP430F67761" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67761"/>
							<attribute key="device.variant" value="MSP430F67761"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6777" desc="MSP430F6777" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6777"/>
							<attribute key="device.variant" value="MSP430F6777"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67771" desc="MSP430F67771" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67771"/>
							<attribute key="device.variant" value="MSP430F67771"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6778" desc="MSP430F6778" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6778"/>
							<attribute key="device.variant" value="MSP430F6778"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67781" desc="MSP430F67781" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67781"/>
							<attribute key="device.variant" value="MSP430F67781"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F6779" desc="MSP430F6779" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F6779"/>
							<attribute key="device.variant" value="MSP430F6779"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="MSP430F67791" desc="MSP430F67791" icon="plugin://icons/obj16/devices.png">
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_34.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_35.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Typical (with separate config project)" desc="Same as the 'Typical' example except that the configuration project is a separate project from the app project.  The benefit of having a separate config project is that several applications can use the same configuration.  This helps save on build times and allows a team to share a common configuratin set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\com_ti_rtsc_sysbios_example_36.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typicalSeparate_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_47.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example (separate config project)" desc="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator." href="C:\ti\bios_6_35_01_29\resources\genericExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="taskSeparate_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				</contents>
				<contents name="MSP430 Examples" desc="MSP430 specific SYS/BIOS Examples" customPageType="genericNote">
				<content name="Idle Example" desc="An MSP430 specific example which uses an Idle function to print to standard out and a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_49.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="idle_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="An MSP430 specific example which uses an Swi function and an Idle function to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_50.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi430_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				<content name="Task Example" desc="An MSP430 specific example which uses an task to print to a log buffer" href="C:\ti\bios_6_35_01_29\resources\msp430Examples\com_ti_rtsc_sysbios_example_51.projectspec">
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task430_MSP430F67791"/>
							<attribute key="device.variant" value="MSP430F67791"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
	</contents>

</resource.explorer>
